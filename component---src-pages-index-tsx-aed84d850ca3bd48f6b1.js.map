{"version":3,"sources":["webpack:///./node_modules/@chakra-ui/layout/dist/esm/grid.js","webpack:///./node_modules/@chakra-ui/layout/dist/esm/simple-grid.js","webpack:///./src/templates/listing-card.tsx","webpack:///./src/components/store-front.tsx","webpack:///./src/pages/index.tsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","Grid","props","ref","area","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","rest","styles","display","gridArea","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","div","__css","spanFn","span","value","displayName","GridItem","colSpan","colStart","colEnd","rowEnd","rowSpan","rowStart","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","SimpleGrid","count","width","columns","spacingX","spacingY","spacing","minChildWidth","n","ListingCard","listing","overflow","to","id","fluid","childrenEtsyListingImage","childFile","childImageSharp","m","align","mt","fontWeight","as","lineHeight","isTruncated","title","price","StoreFront","listings","useStaticQuery","sm","md","lg","allEtsyListing","nodes","map","IndexPage"],"mappings":"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","file":"component---src-pages-index-tsx-aed84d850ca3bd48f6b1.js","sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { filterUndefined, mapResponsive, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * React component used to create grid layouts.\n *\n * It renders a `div` with `display: grid` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/docs/layout/grid\n */\n\nexport var Grid = /*#__PURE__*/forwardRef(function (props, ref) {\n  var area = props.area,\n      templateAreas = props.templateAreas,\n      gap = props.gap,\n      rowGap = props.rowGap,\n      columnGap = props.columnGap,\n      column = props.column,\n      row = props.row,\n      autoFlow = props.autoFlow,\n      autoRows = props.autoRows,\n      templateRows = props.templateRows,\n      autoColumns = props.autoColumns,\n      templateColumns = props.templateColumns,\n      rest = _objectWithoutPropertiesLoose(props, [\"area\", \"templateAreas\", \"gap\", \"rowGap\", \"columnGap\", \"column\", \"row\", \"autoFlow\", \"autoRows\", \"templateRows\", \"autoColumns\", \"templateColumns\"]);\n\n  var styles = {\n    display: \"grid\",\n    gridArea: area,\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    __css: styles\n  }, rest));\n});\n\nif (__DEV__) {\n  Grid.displayName = \"Grid\";\n}\n\nfunction spanFn(span) {\n  return mapResponsive(span, function (value) {\n    return value === \"auto\" ? \"auto\" : \"span \" + value + \"/span \" + value;\n  });\n}\n\nexport var GridItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var colSpan = props.colSpan,\n      colStart = props.colStart,\n      colEnd = props.colEnd,\n      rowEnd = props.rowEnd,\n      rowSpan = props.rowSpan,\n      rowStart = props.rowStart,\n      rest = _objectWithoutPropertiesLoose(props, [\"colSpan\", \"colStart\", \"colEnd\", \"rowEnd\", \"rowSpan\", \"rowStart\"]);\n\n  var styles = filterUndefined({\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd\n  });\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    __css: styles\n  }, rest));\n});","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { mapResponsive, isNumber, isNull, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { Grid } from \"./grid\";\n/**\n * SimpleGrid\n *\n * React component make that providers a simpler interface, and\n * make its easy to create responsive grid layouts.\n *\n * @see Docs https://chakra-ui.com/docs/layout/simple-grid\n */\n\nexport var SimpleGrid = /*#__PURE__*/forwardRef(function (props, ref) {\n  var columns = props.columns,\n      spacingX = props.spacingX,\n      spacingY = props.spacingY,\n      spacing = props.spacing,\n      minChildWidth = props.minChildWidth,\n      rest = _objectWithoutPropertiesLoose(props, [\"columns\", \"spacingX\", \"spacingY\", \"spacing\", \"minChildWidth\"]);\n\n  var templateColumns = minChildWidth ? widthToColumns(minChildWidth) : countToColumns(columns);\n  return /*#__PURE__*/React.createElement(Grid, _extends({\n    ref: ref,\n    gap: spacing,\n    columnGap: spacingX,\n    rowGap: spacingY,\n    templateColumns: templateColumns\n  }, rest));\n});\n\nif (__DEV__) {\n  SimpleGrid.displayName = \"SimpleGrid\";\n}\n\nfunction toPx(n) {\n  return isNumber(n) ? n + \"px\" : n;\n}\n\nfunction widthToColumns(width) {\n  return mapResponsive(width, function (value) {\n    return isNull(value) ? null : \"repeat(auto-fit, minmax(\" + toPx(value) + \", 1fr))\";\n  });\n}\n\nfunction countToColumns(count) {\n  return mapResponsive(count, function (value) {\n    return isNull(value) ? null : \"repeat(\" + value + \", 1fr)\";\n  });\n}","import { Box, VStack } from \"@chakra-ui/react\";\nimport { Link } from \"gatsby\";\nimport Img from 'gatsby-image';\nimport React from \"react\";\n\nfunction ListingCard({ listing, ...rest }) {\n  return (\n    <Box {...rest} overflow=\"hidden\">\n      <Link to={`/listing/${listing.id}`}>\n        <Img fluid={listing.childrenEtsyListingImage[0].childFile.childImageSharp.fluid} />\n\n        <VStack m=\"3\" align=\"left\">\n          <Box\n            mt=\"1\"\n            fontWeight=\"semibold\"\n            as=\"h4\"\n            lineHeight=\"tight\"\n            isTruncated>\n            {listing.title}\n          </Box>\n\n          <Box>${listing.price}</Box>\n        </VStack>\n      </Link>\n    </Box>\n  );\n};\n\nexport default ListingCard;\n","\nimport { SimpleGrid } from \"@chakra-ui/react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport React from \"react\";\nimport ListingCard from \"../templates/listing-card\";\n\nfunction StoreFront() {\n  const listings = useStaticQuery(graphql`\n    query {\n      allEtsyListing {\n        nodes {\n          id\n          description\n          title\n          price\n          views\n          is_customizable\n          num_favorers\n          childrenEtsyListingImage {\n            childFile {\n              childImageSharp {\n                fluid {\n                  aspectRatio\n                  src\n                  srcSet\n                  srcWebp\n                  srcSetWebp\n                  originalName\n                  originalImg\n                  presentationHeight\n                  presentationWidth\n                  sizes\n                }\n              }\n            }\n          }\n        }\n      }\n    }`\n  )\n\n  return (\n    <SimpleGrid columns={{ sm: 1, md:2, lg: 3 }} spacing={4} >\n      {\n        listings.allEtsyListing.nodes.map((listing) => <ListingCard key={listing.id} listing={listing} />)\n      }\n    </SimpleGrid>\n  )\n};\n\nexport default StoreFront;\n","import React from \"react\";\nimport StoreFront from \"../components/store-front\";\n\nfunction IndexPage() {\n  return (\n    <StoreFront />\n  );\n}\n\nexport default IndexPage;\n"],"sourceRoot":""}